@page "/my/UpdatePassword"
<div class="content">
    <div class="header blue ">
        <button class="left icon ion-android-arrow-back" onclick="history.back();" name="button"></button>
        <h1 class="align-center">重置密码</h1>
    </div>
    <div class="body">
        <div class="list white">
            <div class="item icon ion-locked">
                <input type="password" @bind=Dto.OldPassword placeholder="原密码">
            </div>
            <div class="item icon ion-locked">
                <input type="password" @bind=Dto.NewPassword placeholder="新密码">
            </div>
            <div class="item icon ion-locked">
                <input type="password" @bind=Dto.NewPassword1 placeholder="确认密码">
            </div>
            <div class="item">
                <button class="blue full" @onclick=updatePassword>确定</button>
            </div>
        </div>
    </div>
</div>

@layout NullLayout
@inject IMyService myService
@inject IBasePage basePage;
@inject UI ui;
@code {
    public UpdatePasswordDto Dto { get; set; } = new UpdatePasswordDto();

    public  void updatePassword()
    {

         ui.Working(async() =>
        {
            if (Dto.NewPassword != Dto.NewPassword1)
            {
                basePage.Alert("确认密码与新密码不一致", "请重新输入");
                return;
            }

            var ret = await myService.UpdatePassword(Dto);
            if (ret.IsSuccess)
            {
                // basePage.Alert(ret.Message, "提示");
                Preferences.Set(UserConst.Token, "");
                Preferences.Set(UserConst.TenantId, "");
                Preferences.Set(UserConst.CurrentUser, "");


                var RememberMe = Preferences.Get(UserConst.RememberMe, false);

                if (RememberMe)
                {
                    var user = Settings.GetObj<LoginInputVo>(UserConst.LogonUser);
                    user.Password = Dto.NewPassword;
                    Settings.SetObj(UserConst.LogonUser, user);
                }
                basePage.Logout();
            }
            else
            {
                basePage.Alert(ret.Message, "提示");
            }

        });
        // try
        // {
        //     if (Dto.NewPassword!=Dto.NewPassword1)
        //     {
        //         basePage.Alert("确认密码与新密码不一致", "请重新输入");
        //         return;
        //     }

        //     var ret =await myService.UpdatePassword(Dto);
        //     if (ret.IsSuccess)
        //     {
        //        // basePage.Alert(ret.Message, "提示");
        //         Preferences.Set(UserConst.Token, "");
        //         Preferences.Set(UserConst.TenantId, "");
        //         Preferences.Set(UserConst.CurrentUser, "");


        //         var RememberMe= Preferences.Get(UserConst.RememberMe,false);

        //         if (RememberMe)
        //         {
        //             var user = Settings.GetObj<LoginInputVo>(UserConst.LogonUser);
        //             user.Password = Dto.NewPassword;
        //             Settings.SetObj(UserConst.LogonUser,user);
        //         }
        //         basePage.Logout();
        //     }
        //     else
        //     {
        //         basePage.Alert(ret.Message, "提示");
        //     }

        // }
        // catch (Exception ex)
        // {
        //     basePage.Alert(ex.Message, "提示");
        //     // throw;
        // }
        
    }
}
